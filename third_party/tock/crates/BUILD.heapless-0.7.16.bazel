###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//third_party/tock:tock_index
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # MIT OR Apache-2.0
# ])

rust_library(
    name = "heapless",
    srcs = glob(["**/*.rs"]),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "atomic-polyfill",
        "cas",
        "default",
    ],
    crate_root = "src/lib.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    tags = [
        "cargo-bazel",
        "crate-name=heapless",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [],
        "@rules_rust//rust/platform:aarch64-apple-ios": [],
        "@rules_rust//rust/platform:aarch64-apple-ios-sim": [],
        "@rules_rust//rust/platform:aarch64-fuchsia": [],
        "@rules_rust//rust/platform:aarch64-linux-android": [],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [],
        "@rules_rust//rust/platform:armv7-linux-androideabi": [],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [],
        "@rules_rust//rust/platform:i686-apple-darwin": [],
        "@rules_rust//rust/platform:i686-linux-android": [],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [],
        "@rules_rust//rust/platform:i686-unknown-freebsd": [],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:riscv32imc-unknown-none-elf": [],
        "@rules_rust//rust/platform:riscv64gc-unknown-none-elf": [],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:thumbv7em-none-eabi": [],
        "@rules_rust//rust/platform:thumbv8m.main-none-eabi": [],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [],
        "@rules_rust//rust/platform:wasm32-wasi": [],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [],
        "@rules_rust//rust/platform:x86_64-apple-ios": [],
        "@rules_rust//rust/platform:x86_64-fuchsia": [],
        "@rules_rust//rust/platform:x86_64-linux-android": [],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:x86_64-unknown-none": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "0.7.16",
    deps = [
        "@tock_index__hash32-0.2.1//:hash32",
        "@tock_index__heapless-0.7.16//:build_script_build",
        "@tock_index__stable_deref_trait-1.2.0//:stable_deref_trait",
    ] + select({
        "@rules_rust//rust/platform:riscv32imc-unknown-none-elf": [
            "@tock_index__atomic-polyfill-0.1.11//:atomic_polyfill",  # riscv32imc-unknown-none-elf
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "@tock_index__spin-0.9.8//:spin",  # cfg(target_arch = "x86_64")
        ],
        "@rules_rust//rust/platform:x86_64-apple-ios": [
            "@tock_index__spin-0.9.8//:spin",  # cfg(target_arch = "x86_64")
        ],
        "@rules_rust//rust/platform:x86_64-fuchsia": [
            "@tock_index__spin-0.9.8//:spin",  # cfg(target_arch = "x86_64")
        ],
        "@rules_rust//rust/platform:x86_64-linux-android": [
            "@tock_index__spin-0.9.8//:spin",  # cfg(target_arch = "x86_64")
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@tock_index__spin-0.9.8//:spin",  # cfg(target_arch = "x86_64")
        ],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [
            "@tock_index__spin-0.9.8//:spin",  # cfg(target_arch = "x86_64")
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@tock_index__spin-0.9.8//:spin",  # cfg(target_arch = "x86_64")
        ],
        "@rules_rust//rust/platform:x86_64-unknown-none": [
            "@tock_index__spin-0.9.8//:spin",  # cfg(target_arch = "x86_64")
        ],
        "//conditions:default": [],
    }),
)

cargo_build_script(
    name = "heapless_build_script",
    srcs = glob(["**/*.rs"]),
    crate_features = [
        "atomic-polyfill",
        "cas",
        "default",
    ],
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=heapless",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.7.16",
    visibility = ["//visibility:private"],
    deps = [
        "@tock_index__rustc_version-0.4.0//:rustc_version",
    ],
)

alias(
    name = "build_script_build",
    actual = "heapless_build_script",
    tags = ["manual"],
)
